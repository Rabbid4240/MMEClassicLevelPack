<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSolid</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtPlayerProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

cachedXSpeed = 0;
cachedYSpeed = 0;
host = noone;

penetrate = 1;
contactDamage = 4;

noShatter = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(host))
{
    x = host.bbox_left;
    y = host.bbox_top;
    image_xscale = (host.bbox_right - host.bbox_left) / 16;
    image_yscale = (host.bbox_bottom - host.bbox_top) / 16;
    cachedXSpeed = host.xspeed;
    cachedYSpeed = host.yspeed;
    noShatter = !host.superArmDeathOnDrop;
    if (abs(cachedXSpeed) &lt; 2)
    {
        cachedXSpeed = host.image_xscale * 2;
    }
}

var deathOnDrop = true;
if (checkSolid(cachedXSpeed, cachedYSpeed, true))
{
    with (host)
    {
        deathOnDrop = superArmDeathOnDrop;
        event_perform_object(objSuperArm, ev_other, ev_user1);
    }
    
    if (!deathOnDrop)
    {
        instance_destroy();
    }
}

if (deathOnDrop)
{
    if (!instance_exists(host))
    {
        event_user(0);
    }
    else if (!host.superArmThrown || host.dead)
    {
        event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var deathOnDrop = false;
with (host)
{
    deathOnDrop = superArmDeathOnDrop;
    event_perform_object(objSuperArm, ev_other, ev_user1);
}

if (deathOnDrop)
{
    event_user(0);
}
else
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// split into debris

if (noShatter)
{
    instance_destroy();
    exit;
}

playSFX(sfxSuperArm);

for (var ix = bbox_left; ix &lt; bbox_right; ix += 16)
{
    for (var iy = bbox_top; iy &lt; bbox_bottom; iy += 16)
    {
        with (instance_create(ix, iy, objSuperArmDebris))
        {
            xspeed = other.cachedXSpeed;
            yspeed = -2 * ((ix + iy) / 16 mod 2);
            parent = other.parent;
        }
    }
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
