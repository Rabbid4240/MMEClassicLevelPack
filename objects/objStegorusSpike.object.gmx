<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprStegorusSpikeBig</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEnemyProjectile</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
canHit = true;
contactDamage = 2;
grav = 0;

timescale = 1;
xsp = 3;
ysp = -3;
timer = 0;
phase = 0;
animFrame = 0;
parent = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mask_index != sprite_index)
{
    mask_index = sprite_index;
}

event_inherited();

if (entityCanStep())
{
    timer += 1 * timescale;
    
    if (timer &gt; 60)
        timer = 30;
    if (phase == 0)
    {
        animFrame += 0.4 * timescale;
        if (floor(animFrame) &gt; 3)
            animFrame = 0;
        if (timer &gt;= 30)
        {
            grav = 0.25 * timescale;
            yspeed = ysp * timescale;
            xspeed = xsp * timescale * image_xscale;
            phase = 1;
            animFrame = 4;
        }
    }
    else
    {
        animFrame += 0.45 * timescale;
        if (floor(animFrame) &gt; 5)
            animFrame = 4;
        
        if (phase == 1)
        {
            xSpeedTurnaround();
        }
        else
        {
            if (xcoll != 0)
                event_user(EV_DEATH);
        }
        if (ground &amp;&amp; phase &lt; 30)
        {
            phase += 1 * timescale;
            xspeed = 0;
        }
        else if (phase &gt;= 30)
        {
            xspeed += 0.25 * image_xscale * timescale;
            if (abs(xspeed) &gt; 5 * timescale)
            {
                xspeed = 5 * timescale * sign(xspeed);
            }
        }
    }
    image_index = floor(animFrame);
    var hasParent = instance_exists(parent);
    if (!hasParent || (hasParent &amp;&amp; parent.dead))
        event_user(EV_DEATH);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.damage = 0;
other.guardCancel = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
instance_create(x, y, objExplosion);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
