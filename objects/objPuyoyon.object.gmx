<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPuyoyon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// An enemy from Toad Man's stage in MM4. It starts on the ceiling, and when the player gets
// close, it will drop down to the floor and slide there for a bit, before returning to the ceiling.

event_inherited();

healthpointsStart = 2;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "grounded";

grav = -0.25;

// Enemy specific code
phase = 1;
phasetimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    phasetimer += 1;
    switch (phase)
    {
        case 1:
            if (instance_exists(target))
            {
                calibrateDirection();
                phase = 2;
                phasetimer = 0;
            }
            break;
        case 2: // Animation for if it isn't dropping down 
            if (!(phasetimer mod 8))
            {
                if (image_index &lt; 4)
                {
                    image_index += 1;
                    if (image_index &gt; 3)
                    {
                        image_index = 0;
                    }
                }
            }
            
            // Occasional slides on the ceiling
            // Slide always if on the floor
            if (image_yscale &gt; 0)
            {
                if (!(phasetimer mod 40))
                {
                    calibrateDirection(); // face the player
                    xspeed = 1 * image_xscale;
                }
                else if (!(phasetimer mod 60))
                {
                    xspeed = 0;
                }
            }
            else
            {
                xspeed = 1 * image_xscale;
            }
            
            // Trigger drop
            if (((collision_rectangle(x - 48, y - 224, x + 48, y + 224, target, false, true)
                &amp;&amp; image_yscale &gt; 0)
                || (!collision_rectangle(x - 64, y - 224, x + 64, y + 224, target, false, true)
                &amp;&amp; image_yscale &lt; 0))
                &amp;&amp; (ground))
            {
                xspeed = 0;
                yspeed = 0;
                image_index = 4;
                phase = 3;
                phasetimer = 0;
            }
            break;
        case 3:
            if (phasetimer == 8)
            {
                image_index = 5;
                grav = -grav;
                phase = 4;
                phasetimer = 0;
            }
            break;
        case 4:
            if (ground)
            {
                image_index = 6;
                image_yscale = -sign(grav);
                if (phasetimer == 8)
                {
                    image_index = 0;
                    phase = 2;
                    phasetimer = 0;
                }
            }
            else
            {
                phasetimer = 0;
            }
            break;
    }
    
    if (!ground)
    {
        xspeed = 0;
    }
}
else if (dead)
{
    grav = -0.25;
    image_index = 0;
    phase = 1;
    phasetimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
