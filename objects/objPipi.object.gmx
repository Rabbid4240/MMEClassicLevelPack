<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPipi</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A flying robot that drops eggs full of baby pipies that will fly towards Meagaman
event_inherited();

healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "flying, bird";

animTimer = 0;
hasEgg = true;

blockCollision = 0;
grav = 0;

//@cc 0 = red, 1 = orange, 2 = yellow
col = 0;

init = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (init)
{
    init = 0;
    switch (col)
    {
        default:
            sprite_index = sprPipi;
            break;
        case 1:
            sprite_index = sprPipiOrange;
            break;
        case 2:
            sprite_index = sprPipiYellow;
            break;
    }
}


if (entityCanStep())
{
    if (xspeed == 0)
    {
        calibrateDirection();
        xspeed = 2 * image_xscale;
    }
    
    animTimer += 1;
    
    if (animTimer &gt;= 8 &amp;&amp; hasEgg)
    {
        if (image_index == 0)
        {
            image_index = 1;
        }
        else if (image_index == 1)
        {
            image_index = 0;
        }
        animTimer = 0;
    }
    
    if (collision_rectangle(x - 48, y - 512, x + 48, y + 512, target, false, true) &amp;&amp; hasEgg)
    {
        image_index = 2;
        hasEgg = false;
        var ID = instance_create(x, y + 3, objPipiEgg);
        ID.col = col;
        ID.image_xscale = image_xscale;
    }
}
else if (dead)
{
    animTimer = 0;
    hasEgg = true;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
