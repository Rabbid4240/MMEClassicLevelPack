<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSasoreenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creation code (all optional):
// hardcodeSpeed = &lt;number&gt;. If this is set, the Sasoreenu will always

depth = 0; // so it hides behind the quicksand, but is still visible above the quicksand in the editor

event_inherited();

healthpointsStart = 4;
healthpoints = healthpointsStart;
contactDamage = 4;

category = "nature";

// Enemy specific code
animTimer = 0;
inQuicksand = false;
sink = false;
sinkin = 0;

hardcodeSpeed = noone;

pregrav = grav;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    // Update pregrav variable
    if (grav != 0)
    {
        pregrav = grav;
    }
    
    // Animation
    animTimer += 1;
    if (animTimer == (6 / (inQuicksand + 1)))
    {
        animTimer = 0;
        if (inQuicksand)
        {
            if (image_index == 2)
            {
                image_index = 3;
            }
            else if (image_index == 3)
            {
                image_index = 4;
            }
            else if (image_index == 4)
            {
                image_index = 5;
            }
            else
            {
                image_index = 2;
            }
        }
        else
        {
            if (image_index == 1)
            {
                image_index = 0;
            }
            else
            {
                image_index = 1;
            }
        }
    }
    
    // animation override thing
    if (inQuicksand &amp;&amp; animTimer &gt; 3)
    {
        animTimer = 3;
    }
    
    // Rise up if in quicksand
    if (place_meeting(x, y, objQuickSand)) &amp;&amp; (objQuickSand.noRain) &amp;&amp; (!sink)
    {
        calibrateDirection();
        inQuicksand = true;
        yspeed = -1.5;
        xspeed = 0;
    } // Above quicksand behavior
    else if (!sink)
    {
        // Stop rising if it hasn't already
        if (yspeed &lt; 0)
        {
            yspeed = 0;
            grav = 0;
        }
        
        // reset inQuicksand variable
        if (!checkSolid(xspeed * 2, 0))
        {
            inQuicksand = false;
        }
        
        // Check if this boy hit a wall and there's quicksand below
        if (xcoll != 0 &amp;&amp; place_meeting(x, y + 2, objQuickSand))
        {
            sink = true;
            yspeed = 1.5;
            image_index = 2;
            animTimer = 0;
            grav = pregrav;
        } // if not, set speed
        else if (xspeed == 0)
        {
            if (hardcodeSpeed != noone)
            {
                xspeed = hardcodeSpeed * image_xscale;
            }
            else
            {
                xspeed = choose(1.25, 2.5) * image_xscale;
            }
        }
    } // Rising down into quicksand code
    else
    {
        xspeed = 0;
        inQuicksand = true;
        if (ycoll != 0)
        {
            dead = true;
        }
        yspeed = 1.5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// spawn event
event_inherited();

image_index = 0;
animTimer = 0;
inQuicksand = false;
sink = false;
grav = pregrav;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
