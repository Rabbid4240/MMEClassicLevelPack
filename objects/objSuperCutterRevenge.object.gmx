<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSuperCutterRevenge</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

healthpointsStart = 5;
healthpoints = healthpointsStart;
contactDamage = 4;
isTargetable = false;

despawnRange = 64;

phase = 0;
phaseTimer = 0;
animTimer = 0;
image_speed = 0;
image_index = 0;
grav = 0;
blockCollision = 0;

// distance from starting point cutter orbits
radius = 38;

// number of frames per revolution
period = 90;

dir = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if (entityCanStep())
{
    phaseTimer++;
    calibrateDirection();
    switch (phase)
    {
        case 0: // wait 
            xspeed = 0;
            yspeed = 0;
            image_index = 1;
            if (instance_exists(target))
                if (point_distance(x, y, target.x, target.y) &lt; 64)
                {
                    phase = 1;
                    phaseTimer = 0;
                    dir = image_xscale;
                }
            break;
        case 1: // lunge 
            var p = (phaseTimer / 28) * 0.7 + 0.15;
            var desDst = radius * (-0.5 * cos(p * pi) + 0.5)
                ;
            var desX = xstart + dir * desDst
                ;
            xspeed = desX - x;
            if (abs(p - 0.5) &lt; 0.2)
                image_index = 2;
            else
                image_index = 0;
            
            // begin circling:
            if (p &gt;= 0.85)
            {
                phase = 2;
                animTimer = 0;
                phaseTimer = 0;
            }
            break;
        case 2: // circle
        // motion is discontinuous and defies all sense. 
            xspeed = 0;
            yspeed = 0;
            phaseTimer -= floorTo(phaseTimer, period);
            var theta = pi * 2 * roundTo(phaseTimer / period, 1 / 16);
            x = xstart + radius * cos(theta) * dir;
            y = ystart - radius * sin(theta);
            animTimer = (animTimer + 1) mod 24;
            var animTable = makeArray(1, 0, 2, 0)
                ;
            image_index = animTable[animTimer div 6];
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

phase = 0;
phaseTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.guardCancel = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
