<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTileAnimation</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtAlwaysActive</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
///Used to animate a tileset with its animation frames in different backgrounds
///An object setter is required for animating chunks of tiles(you don't have to set any object if you
///don't want to, just put one in the tileset so its tiles are splited).
///To use you have to set the animID array to the animation frames of the tileset
///and set animationLayer to the layer where the animated tiles are
/*
animLength = how many frames
animTime = interval before change
animID[#] = background frame (Note # goes up from 0 to animLength)
animateOnTransition = will stop animations during the transition

animationLayer = Layer animated tiles start at (your animated tiles should start on this layer)

Note: This only works for tiles on a 16x16 grid


see the example level for how to set this up.
*/

animLength = 1;
animTime = 1;
animateOnTransition = false;
animID[10] = tstAnimated;
animID[0] = noone;
animationLayer=100000;

timer = 0;
tileID = 0;
init=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// This generates tiles all across the levet
/// Note this causes lag at the start of the stage in larger levels
if(init)
{
    print("Animating");
    var tiles = tile_get_ids_at_depth(animationLayer);
    var total = array_length_1d(tiles);
    if(total&lt;=0)
    {
        init=0;
        instance_destroy();
        exit;
    }
    
    for (var i = 0; i &lt; total; i+=1)
    {
        var tile = tiles[i];
        var bg=tile_get_background(tile);
        var skip=true;
        var k=0;
        for(var j=0; j&lt;animLength;j+=1;)
        {
            if(bg==animID[j])
            {
                skip=false;
                k=j+1;
                break;
            }
        }
        if(skip)
            continue;
        if(k&gt;=animLength)
        {
            k=0;
        }
        for(var j=1;j&lt;animLength;j++)
        {
            tile_add(animID[k], tile_get_left(tile),
                tile_get_top(tile), 16,
                16, tile_get_x(tile), tile_get_y(tile),
                animationLayer + j);
            ++k;
            if(k&gt;=animLength)
            {
                k=0;
            }
        }
    }
    for(var i =1;i&lt;animLength;i++)
        tile_layer_hide(animationLayer+i);
    init=false;
    exit;
}

if (global.frozen)
{
    if (!global.switchingSections)
    {
        exit;
    }
    else if (!animateOnTransition)
    {
        exit;
    }
}

if (timer &lt; animTime)
{
    timer += 1;
}
else
{
    timer = 0;
    if (tileID &lt; animLength)
    {
        tile_layer_hide(animationLayer + tileID);
        tileID += 1;
        if(tileID==animLength)
            tileID = 0;
        tile_layer_show(animationLayer + tileID);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
