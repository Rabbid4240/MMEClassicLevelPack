<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMegamanShadow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>prtEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
healthpointsStart = 1;
healthpoints = healthpointsStart;
contactDamage = 0;

// Enemy specific code
fade_in_time = 34;

// 0: fade in
// 1: run
phase = 0;
phaseTimer = 0;
canHit = false;

triggered = false;

visible = false;

spriteX = 0;
spriteY = 0;
animTimer = 0;
targetPID = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (entityCanStep())
{
    switch (phase)
    {
        case 0:
            grav = 0;
            spriteX = 0;
            spriteY = 0;
            contactDamage = 0;
            with (instance_place(x, y, objMegaman))
            {
                other.image_xscale = image_xscale;
                other.triggered = true;
                other.target = id;
                other.targetPID = playerID;
                other.targetCID = costumeID;
            }
            if (triggered)
                phaseTimer += 1;
            visible = (phaseTimer div 3) mod 2;
            if (phaseTimer &gt; fade_in_time)
            {
                phaseTimer = 0;
                phase = 1;
            }
            break;
        case 1:
            grav = .25;
            visible = true;
            contactDamage = 2;
            animTimer += 1;
            canHit = true;
            xspeed = 1.8 * image_xscale;
            
            // face player occasionally
            phaseTimer += 1;
            if (phaseTimer == 15)
            {
                phaseTimer = 0;
                calibrateDirection();
            }
            if (checkSolid(xspeed, 0) &amp;&amp; ground)
            {
                // it'll jump when it hits a wall, but only sometimes
                if (irandom_range(1, 2) == 1)
                {
                    yspeed = -3.75;
                }
                else
                {
                    image_xscale *= -1;
                }
            }
            if (!instance_exists(target))
            {
                dead = true;
            }
            if (!ground)
            {
                spriteX = 7 + (animTimer div 8) mod 2;
                spriteY = 0;
            }
            else
            {
                spriteX = 3 + (animTimer div 8) mod 4;
                spriteY = 0;
            }
    }
}
else if (dead)
{
    xspeed = 0;
    triggered = false;
    phaseTimer = 0;
    phase = 0;
    canHit = false;
    contactDamage = 0;
    animTimer = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
visible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// TODO: proper skin colour palette remapping (this doesn't draw quite accurately.)
if (!dead)
{
    drawCostume(global.playerSprite[targetCID], spriteX, spriteY, x, y, image_xscale, image_yscale,
        c_ltgray, c_black, global.nesPalette[39], c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
